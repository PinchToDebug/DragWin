//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DragWin.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Lang {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Lang() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DragWin.Properties.Lang", typeof(Lang).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error adding to autorun.
        /// </summary>
        public static string Message_error_autorun_add {
            get {
                return ResourceManager.GetString("Message.error.autorun.add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error removing from autorun.
        /// </summary>
        public static string Message_error_autorun_remove {
            get {
                return ResourceManager.GetString("Message.error.autorun.remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t get the executable&apos;s path..
        /// </summary>
        public static string Message_error_executable {
            get {
                return ResourceManager.GetString("Message.error.executable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error setting hookStruct.
        /// </summary>
        public static string Message_error_hookstruct {
            get {
                return ResourceManager.GetString("Message.error.hookstruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading key.
        /// </summary>
        public static string Message_error_read_key {
            get {
                return ResourceManager.GetString("Message.error.read.key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error getting window handle.
        /// </summary>
        public static string Message_error_window_handle {
            get {
                return ResourceManager.GetString("Message.error.window.handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error getting window handle&apos;s title.
        /// </summary>
        public static string Message_error_window_title {
            get {
                return ResourceManager.GetString("Message.error.window.title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start on login.
        /// </summary>
        public static string NotifyIcon_autorun {
            get {
                return ResourceManager.GetString("NotifyIcon.autorun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Updates.
        /// </summary>
        public static string NotifyIcon_check_update {
            get {
                return ResourceManager.GetString("NotifyIcon.check.update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable.
        /// </summary>
        public static string NotifyIcon_enable {
            get {
                return ResourceManager.GetString("NotifyIcon.enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string NotifyIcon_exit {
            get {
                return ResourceManager.GetString("NotifyIcon.exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto FancyZones.
        /// </summary>
        public static string NotifyIcon_fancyzones {
            get {
                return ResourceManager.GetString("NotifyIcon.fancyzones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opacity scrolling.
        /// </summary>
        public static string NotifyIcon_opacity {
            get {
                return ResourceManager.GetString("NotifyIcon.opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen overflow.
        /// </summary>
        public static string NotifyIcon_overflow {
            get {
                return ResourceManager.GetString("NotifyIcon.overflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resize corners.
        /// </summary>
        public static string NotifyIcon_resize {
            get {
                return ResourceManager.GetString("NotifyIcon.resize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll windows.
        /// </summary>
        public static string NotifyIcon_scroll {
            get {
                return ResourceManager.GetString("NotifyIcon.scroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set window top.
        /// </summary>
        public static string NotifyIcon_settop {
            get {
                return ResourceManager.GetString("NotifyIcon.settop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wheel gesture.
        /// </summary>
        public static string NotifyIcon_wheel {
            get {
                return ResourceManager.GetString("NotifyIcon.wheel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New release!.
        /// </summary>
        public static string Toast_release_available {
            get {
                return ResourceManager.GetString("Toast.release.available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Toast_release_close {
            get {
                return ResourceManager.GetString("Toast.release.close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Toast_release_install {
            get {
                return ResourceManager.GetString("Toast.release.install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no available update..
        /// </summary>
        public static string Toast_release_noavailable_body {
            get {
                return ResourceManager.GetString("Toast.release.noavailable.body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are up to date!.
        /// </summary>
        public static string Toast_release_noavailable_header {
            get {
                return ResourceManager.GetString("Toast.release.noavailable.header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update..
        /// </summary>
        public static string Toast_update_failed {
            get {
                return ResourceManager.GetString("Toast.update.failed", resourceCulture);
            }
        }
    }
}
